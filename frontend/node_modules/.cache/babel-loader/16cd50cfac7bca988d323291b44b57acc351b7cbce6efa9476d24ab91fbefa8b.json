{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\skillon proj\\\\frontend\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { api } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport function useAuth() {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n}\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport function AuthProvider({\n  children\n}) {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      // Verify token and get user info\n      api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n      // For now, we'll just set a basic user object\n      // In a real app, you'd verify the token with the backend\n      setUser({\n        token\n      });\n    }\n    setLoading(false);\n  }, []);\n  const login = async (email, password) => {\n    try {\n      const response = await api.post('/api/login', {\n        email,\n        password\n      });\n      const {\n        access_token,\n        ...userData\n      } = response.data;\n      localStorage.setItem('token', access_token);\n      api.defaults.headers.common['Authorization'] = `Bearer ${access_token}`;\n      setUser({\n        ...userData,\n        token: access_token\n      });\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response, _error$response$data, _error$response$data$;\n      return {\n        success: false,\n        error: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : (_error$response$data$ = _error$response$data.error) === null || _error$response$data$ === void 0 ? void 0 : _error$response$data$.message) || 'Login failed'\n      };\n    }\n  };\n  const register = async (email, password, fullName, role = 'candidate') => {\n    try {\n      const response = await api.post('/api/register', {\n        email,\n        password,\n        full_name: fullName,\n        role\n      });\n      const {\n        access_token,\n        ...userData\n      } = response.data;\n      localStorage.setItem('token', access_token);\n      api.defaults.headers.common['Authorization'] = `Bearer ${access_token}`;\n      setUser({\n        ...userData,\n        token: access_token\n      });\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response2, _error$response2$data, _error$response2$data2;\n      return {\n        success: false,\n        error: ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : (_error$response2$data2 = _error$response2$data.error) === null || _error$response2$data2 === void 0 ? void 0 : _error$response2$data2.message) || 'Registration failed'\n      };\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    delete api.defaults.headers.common['Authorization'];\n    setUser(null);\n  };\n  const value = {\n    user,\n    login,\n    register,\n    logout,\n    loading\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n}\n_s2(AuthProvider, \"NiO5z6JIqzX62LS5UWDgIqbZYyY=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","api","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","loading","setLoading","token","localStorage","getItem","defaults","headers","common","login","email","password","response","post","access_token","userData","data","setItem","success","error","_error$response","_error$response$data","_error$response$data$","message","register","fullName","role","full_name","_error$response2","_error$response2$data","_error$response2$data2","logout","removeItem","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Desktop/skillon proj/frontend/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport { api } from '../services/api';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport function useAuth() {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n}\r\n\r\nexport function AuthProvider({ children }) {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      // Verify token and get user info\r\n      api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n      // For now, we'll just set a basic user object\r\n      // In a real app, you'd verify the token with the backend\r\n      setUser({ token });\r\n    }\r\n    setLoading(false);\r\n  }, []);\r\n\r\n  const login = async (email, password) => {\r\n    try {\r\n      const response = await api.post('/api/login', { email, password });\r\n      const { access_token, ...userData } = response.data;\r\n      \r\n      localStorage.setItem('token', access_token);\r\n      api.defaults.headers.common['Authorization'] = `Bearer ${access_token}`;\r\n      \r\n      setUser({ ...userData, token: access_token });\r\n      return { success: true };\r\n    } catch (error) {\r\n      return { \r\n        success: false, \r\n        error: error.response?.data?.error?.message || 'Login failed' \r\n      };\r\n    }\r\n  };\r\n\r\n  const register = async (email, password, fullName, role = 'candidate') => {\r\n    try {\r\n      const response = await api.post('/api/register', { \r\n        email, \r\n        password, \r\n        full_name: fullName,\r\n        role \r\n      });\r\n      const { access_token, ...userData } = response.data;\r\n      \r\n      localStorage.setItem('token', access_token);\r\n      api.defaults.headers.common['Authorization'] = `Bearer ${access_token}`;\r\n      \r\n      setUser({ ...userData, token: access_token });\r\n      return { success: true };\r\n    } catch (error) {\r\n      return { \r\n        success: false, \r\n        error: error.response?.data?.error?.message || 'Registration failed' \r\n      };\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('token');\r\n    delete api.defaults.headers.common['Authorization'];\r\n    setUser(null);\r\n  };\r\n\r\n  const value = {\r\n    user,\r\n    login,\r\n    register,\r\n    logout,\r\n    loading\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}